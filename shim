#! /bin/sh

PATH=/bin:/usr/bin:/sbin:/usr/sbin

# load settings for distribution
# includes PATH
. ./distro-settings

# detect if the settings were not changed.
[ $PATH = "fail" ] && echo "Failed to PATH setting." && exit 1
[ $SVCDIR = "fail" ] && echo "Failed to load service directory location setting." && exit 1

# set the service to point to its associated definition
SERVICE=$SVCDIR/$0


# load settings for the supervision environment
# includes SVCCTRL, CMDSTART, CMDSTOP
. ./supervisor-settings

# detect if the settings were not changed.
[ $SVCCTRL = "fail" ] && echo "Failed to load service control setting." && exit 1
[ $CMDSTOP = "fail" ] && echo "Failed to service stop setting." && exit 1
[ $CMDSTART = "fail" ] && echo "Failed to load service start setting." && exit 1


case "$1" in
  start)
    # detect if there is no definition present.  If so,
    # copy the default definition to the active service directory
    # because we are explicitly asking it to start.
    [ -d $SERVICE ] || \
        cp -Rav $SVCDEF/$0 $SERVICE || \
            echo "Failed to create service definition." && \
            exit 1
    # attempt to start the service
    $SVCCTRL $CMDSTART $SERVICE
    exit $?
    ;;
  stop)
    $SVCCTRL $CMDSTOP $SERVICE
    exit $?
    ;;
  restart)
    $SVCCTRL $CMDSTOP $SERVICE && $SVCCTRL $CMDSTART $SERVICE
    exit $?
    ;;
  reload)
    # intercept any reload calls and turn them into a NO-OP
    # as we do not have a consistent method for telling a
    # daemon to reload its settings.
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac

exit 0
